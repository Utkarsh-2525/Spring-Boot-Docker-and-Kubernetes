server:
    port: 8072


spring:
    application:
        name: "gatewayserver"
    config:
        import: "optional:configserver:http://localhost:8071/" # optional is used to denote that even if config server fails                                                          to start, microservices would still run
    cloud:
        gateway:
            httpclient:
                connect-timeout: 1000
                response-timeout: 2s
            discovery:
                locator:
                    enabled: false
                    lowerCaseServiceId: true
#    data:                           # Redis related configurations
#        redis:
#            connect-timeout: 2s
#            host: localhost
#            port: 6379
#            timeout: 1s

management:
    endpoints:
        web:
            exposure:
                include: "*"
    endpoint:
        gateway:
            enabled: true
    info:
        env:
            enabled: true


info:
    app:
        name: "gatewayserver"
        description: "Demo Bank Gateway Server Application"
        version: "1.0.0"
eureka:
    instance:
        preferIpAddress: true
    client:
        registerWithEureka: true
        fetchRegistry: true
        serviceUrl:
            defaultZone: "http://localhost:8070/eureka/"
logging:
    level:
        com:
            utkarsh2573:
                gatewayserver: DEBUG # Logs of com.utkarsh2573.gatewayserver would be printed which are of type debug
resilience4j:
    circuitbreaker:
        configs:
            default:
                sliding-window-size: 10
                permitted-number-of-calls-in-half-open-state: 2
                failure-rate-threshold: 50
                wait-duration-in-open-state:
                    seconds: 10